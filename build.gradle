buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
		maven { url = "file://${System.getProperty("user.home")}/mcmodsrepo" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    		classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

apply plugin: 'org.spongepowered.mixin'

group = project.group
archivesBaseName = project.modId

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'official', version: project.minecraftVersion

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
      			property 'mixin.env.disableRefMap', 'true'

            property 'forge.logging.console.level', 'debug'

            mods {
                hothotbars {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
      			property 'mixin.env.disableRefMap', 'true'

            property 'forge.logging.console.level', 'debug'

            mods {
                hothotbars {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
      			property 'mixin.env.disableRefMap', 'true'

            property 'forge.logging.console.level', 'debug'

            args '--mod', project.modId, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                hothotbars {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    minecraft 'net.minecraftforge:forge:'+project.minecraftVersion+'-'+project.forgeVersion

		implementation 'org.joml:joml:1.10.2'

  	implementation 'org.spongepowered:mixin:0.8.5'
  	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
		config "sodium.mixins.json"
		add sourceSets.main, "sodium.refmap.json"

		debug.verbose = true
    debug.export = true
}

processResources {

    def buildProps = project.properties.clone()

    buildProps.put('file', [jarVersion: project.version])

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {

        expand buildProps
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.modId,
                "Specification-Vendor"    : project.modAuthor,
                "Specification-Version"   : project.jar.archiveVersion,
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : project.modAuthor,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')

java {
		withSourcesJar()
		withJavadocJar()
		toolchain.languageVersion = JavaLanguageVersion.of(17)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
